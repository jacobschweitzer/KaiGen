{
  "$schema": "https://playground.wordpress.net/blueprint-schema.json",
  "preferredVersions": {
    "php": "8.1",
    "wp": "latest"
  },
  "features": {
    "networking": true
  },
  "steps": [
    {
      "step": "runWpInstallationWizard",
      "options": {
        "adminUsername": "admin",
        "adminPassword": "password"
      }
    },
    {
      "step": "writeFile",
      "path": "/wordpress/wp-content/mu-plugins/http-mock.php",
      "data": "<?php\n/**\n * HTTP Mock for E2E testing\n * \n * This mu-plugin intercepts external HTTP requests during E2E tests\n * and returns mocked responses for OpenAI and Replicate APIs.\n *\n * @package KaiGen\n */\n\n// Only run in test environment\nif (!defined('E2E_TESTING') && !str_contains($_SERVER['HTTP_HOST'] ?? '', 'localhost:9400')) {\n    return;\n}\n\n/**\n * Filter to intercept HTTP requests and return mocked responses.\n */\nadd_filter('pre_http_request', function ($pre, $args, $url) {\n    // Log the request for debugging\n    error_log('KaiGen E2E Mock: Intercepting request to ' . $url);\n\n    // Mock OpenAI image generation endpoint\n    if (str_contains($url, 'api.openai.com/v1/images/generations')) {\n        error_log('KaiGen E2E Mock: Returning mocked OpenAI generation response');\n        \n        return [\n            'headers'  => ['content-type' => 'application/json'],\n            'body'     => wp_json_encode([\n                'created' => time(),\n                'data' => [\n                    [\n                        'url' => 'https://via.placeholder.com/1024x1024.png?text=AI+Generated+Image',\n                        'revised_prompt' => 'A beautiful sunset over mountains with vibrant colors'\n                    ]\n                ]\n            ]),\n            'response' => [\n                'code' => 200,\n                'message' => 'OK'\n            ],\n            'cookies' => [],\n            'filename' => ''\n        ];\n    }\n\n    // Mock OpenAI image edit endpoint (for image-to-image)\n    if (str_contains($url, 'api.openai.com/v1/images/edits')) {\n        error_log('KaiGen E2E Mock: Returning mocked OpenAI edit response');\n        \n        return [\n            'headers'  => ['content-type' => 'application/json'],\n            'body'     => wp_json_encode([\n                'created' => time(),\n                'data' => [\n                    [\n                        'url' => 'https://via.placeholder.com/1024x1024.png?text=AI+Edited+Image',\n                        'revised_prompt' => 'An edited version of the original image'\n                    ]\n                ]\n            ]),\n            'response' => [\n                'code' => 200,\n                'message' => 'OK'\n            ],\n            'cookies' => [],\n            'filename' => ''\n        ];\n    }\n\n    // Mock Replicate predictions endpoint\n    if (str_contains($url, 'api.replicate.com/v1/models/') && str_contains($url, '/predictions')) {\n        error_log('KaiGen E2E Mock: Returning mocked Replicate prediction creation response');\n        \n        $prediction_id = 'test-' . uniqid();\n        \n        // Return immediately succeeded response (simulating sync mode)\n        return [\n            'headers'  => ['content-type' => 'application/json'],\n            'body'     => wp_json_encode([\n                'id' => $prediction_id,\n                'status' => 'succeeded',\n                'output' => ['https://via.placeholder.com/1024x1024.png?text=Replicate+Generated+Image'],\n                'created_at' => date('c'),\n                'completed_at' => date('c'),\n                'metrics' => [\n                    'predict_time' => 2.5\n                ]\n            ]),\n            'response' => [\n                'code' => 200,\n                'message' => 'OK'\n            ],\n            'cookies' => [],\n            'filename' => ''\n        ];\n    }\n\n    // Mock Replicate prediction status check endpoint\n    if (str_contains($url, 'api.replicate.com/v1/predictions/')) {\n        error_log('KaiGen E2E Mock: Returning mocked Replicate prediction status response');\n        \n        $prediction_id = basename($url);\n        \n        return [\n            'headers'  => ['content-type' => 'application/json'],\n            'body'     => wp_json_encode([\n                'id' => $prediction_id,\n                'status' => 'succeeded',\n                'output' => ['https://via.placeholder.com/1024x1024.png?text=Replicate+Generated+Image'],\n                'created_at' => date('c'),\n                'completed_at' => date('c'),\n                'metrics' => [\n                    'predict_time' => 2.5\n                ]\n            ]),\n            'response' => [\n                'code' => 200,\n                'message' => 'OK'\n            ],\n            'cookies' => [],\n            'filename' => ''\n        ];\n    }\n\n    // Mock placeholder.com image requests (to prevent actual external requests)\n    if (str_contains($url, 'via.placeholder.com')) {\n        error_log('KaiGen E2E Mock: Returning mocked placeholder image');\n        \n        // Return a simple 1x1 transparent PNG\n        $png_data = base64_decode('iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==');\n        \n        return [\n            'headers'  => [\n                'content-type' => 'image/png',\n                'content-length' => strlen($png_data)\n            ],\n            'body'     => $png_data,\n            'response' => [\n                'code' => 200,\n                'message' => 'OK'\n            ],\n            'cookies' => [],\n            'filename' => ''\n        ];\n    }\n\n    // Allow all other requests to proceed normally\n    return $pre;\n}, 10, 3);\n\n// Also add a filter to mock successful uploads\nadd_filter('wp_handle_sideload_prefilter', function($file) {\n    if (defined('E2E_TESTING') || str_contains($_SERVER['HTTP_HOST'] ?? '', 'localhost:9400')) {\n        error_log('KaiGen E2E Mock: Intercepting file upload for ' . $file['name']);\n    }\n    return $file;\n});\n\n// Log that the mock is loaded\nerror_log('KaiGen E2E Mock: HTTP mock loaded and ready');"
    },
    {
      "step": "activatePlugin",
      "pluginPath": "/wordpress/wp-content/plugins/kaigen"
    },
    {
      "step": "login",
      "username": "admin",
      "password": "password"
    }
  ]
} 