{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAC6C;AACY;AACiD;AAClC;AAChB;AACC;AACR;AACW;AACV;AACG;;AAErD;AACA;AACA;AACA;AACA,MAAMkB,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,EAAE,CAACC,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAgC,CAAC,CAAC;IAC7E,OAAOH,QAAQ;EACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD;IACA,OAAO;MAAEA,KAAK,EAAE;IAAqD,CAAC;EAC1E;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,aAAa,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;EACxD,IAAI;IACA;IACA,MAAMT,QAAQ,GAAG,MAAMC,EAAE,CAACC,QAAQ,CAAC;MAC/BC,IAAI,EAAE,oCAAoC;MAC1CO,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE;QAAEJ,MAAM;QAAEC;MAAS;IAC7B,CAAC,CAAC;;IAEF;IACA,IAAIR,QAAQ,IAAIA,QAAQ,CAACY,GAAG,EAAE;MAC1BH,QAAQ,CAAC;QACLG,GAAG,EAAEZ,QAAQ,CAACY,GAAG;QACjBC,GAAG,EAAEN,MAAM;QACXO,EAAE,EAAEd,QAAQ,CAACc,EAAE,IAAK,gBAAeC,IAAI,CAACC,GAAG,CAAC,CAAE,EAAC;QAAE;QACjDC,OAAO,EAAE;MACb,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACA,MAAM,IAAIC,KAAK,CAAC,gCAAgC,GAAGC,IAAI,CAACC,SAAS,CAACpB,QAAQ,CAAC,CAAC;IAChF;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ;IACAC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,IAAIA,KAAK,CAACiB,OAAO,EAAEhB,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACiB,OAAO,CAAC;IACjE,IAAIjB,KAAK,CAACkB,KAAK,EAAEjB,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACkB,KAAK,CAAC;IAC3Db,QAAQ,CAAC;MAAEL,KAAK,EAAEA,KAAK,CAACiB,OAAO,IAAI;IAAyB,CAAC,CAAC;EAClE;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAME,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG5C,4DAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyB,MAAM,EAAEoB,SAAS,CAAC,GAAG7C,4DAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,4DAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgD,SAAS,EAAEC,YAAY,CAAC,GAAGjD,4DAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACkD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnD,4DAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACsB,KAAK,EAAE8B,QAAQ,CAAC,GAAGpD,4DAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACqD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtD,4DAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,6DAAS,CAAC,MAAM;IACZgB,cAAc,CAAC,CAAC,CAACsC,IAAI,CAAEC,MAAM,IAAK;MAC9B,IAAIA,MAAM,CAAClC,KAAK,EAAE;QACd8B,QAAQ,CAACI,MAAM,CAAClC,KAAK,CAAC;MAC1B,CAAC,MAAM;QACH2B,YAAY,CAACO,MAAM,CAAC;;QAEpB;QACA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC;QACvE,IAAIF,cAAc,IAAID,MAAM,CAACC,cAAc,CAAC,EAAE;UAC1CN,mBAAmB,CAACM,cAAc,CAAC;UACnCH,mBAAmB,CAACG,cAAc,CAAC;QACvC,CAAC,MAAM;UACH;UACAN,mBAAmB,CAACS,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvD,6DAAS,CAAC,MAAM;IACZ,IAAIiD,gBAAgB,EAAE;MAClBQ,YAAY,CAACI,OAAO,CAAC,0BAA0B,EAAEZ,gBAAgB,CAAC;MAClEI,mBAAmB,CAACJ,gBAAgB,CAAC;IACzC;EACJ,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;;EAEtB;EACA,MAAMa,cAAc,GAAGA,CAAA,KAAM;IACzBhB,YAAY,CAAC,IAAI,CAAC;IAClBvB,aAAa,CAACC,MAAM,EAAEyB,gBAAgB,EAAGc,KAAK,IAAK;MAC/CtB,QAAQ,CAACsB,KAAK,CAAC;MACfjB,YAAY,CAAC,KAAK,CAAC;MACnBH,cAAc,CAAC,KAAK,CAAC;IACzB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMqB,eAAe,GAAGL,MAAM,CAACM,OAAO,CAAClB,SAAS,CAAC,CAACmB,GAAG,CAAC,CAAC,CAACnC,EAAE,EAAEoC,IAAI,CAAC,MAAM;IAAEC,KAAK,EAAErC,EAAE;IAAEsC,KAAK,EAAEF;EAAK,CAAC,CAAC,CAAC;EAEnG,OACIG,oDAAA,CAAAC,2CAAA,QAEID,oDAAA;IAAKE,SAAS,EAAC;EAAqD,GAChEF,oDAAA,CAACrE,yDAAM;IACHwE,OAAO,EAAC,UAAU;IAClBC,OAAO,EAAEA,CAAA,KAAM/B,cAAc,CAAC,IAAI,CAAE;IACpC6B,SAAS,EAAC;EAAwC,GACrD,mBAEO,CACP,CAAC,EAGL9B,WAAW,IACR4B,oDAAA,CAACnE,wDAAK;IACFwE,KAAK,EAAC,iBAAiB;IACvBC,cAAc,EAAEA,CAAA,KAAMjC,cAAc,CAAC,KAAK;EAAE,GAE3CtB,KAAK,GACFiD,oDAAA;IAAGO,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE,GAAEzD,KAAS,CAAC,GAEvCiD,oDAAA,CAAAC,2CAAA,QAEKP,eAAe,CAACe,MAAM,GAAG,CAAC,IACvBT,oDAAA,CAACjE,gEAAa;IACVgE,KAAK,EAAC,iBAAiB;IACvBD,KAAK,EAAEnB,gBAAiB;IACxB+B,OAAO,EAAEhB,eAAgB;IACzBiB,QAAQ,EAAE/B;EAAoB,CACjC,CACJ,EAEDoB,oDAAA,CAACpE,8DAAW;IACRmE,KAAK,EAAC,yBAAyB;IAC/BD,KAAK,EAAE5C,MAAO;IACdyD,QAAQ,EAAErC;EAAU,CACvB,CAAC,EAEF0B,oDAAA,CAACrE,yDAAM;IACHwE,OAAO,EAAC,SAAS;IACjBC,OAAO,EAAEZ,cAAe;IACxBoB,QAAQ,EAAErC,SAAS,IAAI,CAACI,gBAAgB,IAAIU,MAAM,CAACC,IAAI,CAACb,SAAS,CAAC,CAACgC,MAAM,KAAK;EAAE,GAE/ElC,SAAS,GACNyB,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAAClE,0DAAO,MAAE,CAAC,iBAEb,CAAC,GAEH,gBAEA,CACV,CAEH,CAEb,CAAC;AAEX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+E,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EACzD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxF,4DAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACsB,KAAK,EAAE8B,QAAQ,CAAC,GAAGpD,4DAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtD,4DAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,6DAAS,CAAC,MAAM;IACZ,MAAMwD,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC;IACvE,IAAIF,cAAc,EAAE;MAChBH,mBAAmB,CAACG,cAAc,CAAC;IACvC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMgC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,iBAAiB,CAAC,IAAI,CAAC;IACvBpC,QAAQ,CAAC,IAAI,CAAC;IAEd5B,aAAa,CAAC6D,UAAU,CAACtD,GAAG,EAAEsB,gBAAgB,EAAGG,MAAM,IAAK;MACxDgC,iBAAiB,CAAC,KAAK,CAAC;MACxB,IAAIhC,MAAM,CAAClC,KAAK,EAAE;QACd8B,QAAQ,CAACI,MAAM,CAAClC,KAAK,CAAC;QACtBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEkC,MAAM,CAAClC,KAAK,CAAC;MAC7D,CAAC,MAAM;QACHgE,aAAa,CAAC;UACVxD,GAAG,EAAE0B,MAAM,CAAC1B,GAAG;UACfE,EAAE,EAAEwB,MAAM,CAACxB;QACf,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EAED,OACIuC,oDAAA,CAACxD,4DAAS;IAAC6D,KAAK,EAAC;EAAiB,GAC9BL,oDAAA,CAACrE,yDAAM;IACHwE,OAAO,EAAC,WAAW;IACnBC,OAAO,EAAEc,gBAAiB;IAC1BN,QAAQ,EAAEI,cAAc,IAAI,CAAClC,gBAAiB;IAC9CqC,MAAM,EAAEH;EAAe,GAEtBA,cAAc,GAAG,iBAAiB,GAAG,qBAClC,CAAC,EACRjE,KAAK,IAAIiD,oDAAA;IAAGO,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAM;EAAE,GAAEzD,KAAS,CACzC,CAAC;AAEpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMqE,cAAc,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EAC1D,OACItB,oDAAA,CAACvD,+DAAY,QACTuD,oDAAA,CAAChE,gEAAa;IACVuF,IAAI,EAAEF,YAAY,GAAGrB,oDAAA,CAAClE,0DAAO,MAAE,CAAC,GAAG,KAAM;IACzCiE,KAAK,EAAEsB,YAAY,GAAG,wBAAwB,GAAG,mBAAoB;IACrEjB,OAAO,EAAEkB,eAAgB;IACzBV,QAAQ,EAAES;EAAa,CAC1B,CACS,CAAC;AAEvB,CAAC;;AAED;AACApF,wEAAkB,CAAC,+BAA+B,EAAE;EAChDoE,KAAK,EAAE,cAAc;EACrBmB,OAAO,EAAE,MAAM;EACftB,SAAS,EAAE,wBAAwB;EACnCuB,IAAI,EAAEA,CAAC;IAAEC,QAAQ;IAAE5B,KAAK;IAAEa;EAAS,CAAC,KAAK;IACrC,MAAM,CAAC7B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtD,4DAAQ,CAAC,EAAE,CAAC;IAC5D,MAAM,CAAC4F,YAAY,EAAEM,eAAe,CAAC,GAAGlG,4DAAQ,CAAC,KAAK,CAAC;IAEvD,MAAMmG,aAAa,GAAGxF,0DAAS,CAACyF,MAAM,IAClCA,MAAM,CAAC,mBAAmB,CAAC,CAACC,gBAAgB,CAAC,CAAC,EAChD,EAAE,CAAC;IAEL,MAAM;MAAEC;IAAc,CAAC,GAAG1F,4DAAW,CAAC,mBAAmB,CAAC;;IAE1D;IACAX,6DAAS,CAAC,MAAM;MACZ,MAAMwD,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC;MACvE,IAAIF,cAAc,EAAE;QAChBH,mBAAmB,CAACG,cAAc,CAAC;MACvC;IACJ,CAAC,EAAE,EAAE,CAAC;IAEN,MAAM8C,mBAAmB,GAAG1F,+DAAW,CAAC,MAAM;MAC1C,IAAIsF,aAAa,IAAIA,aAAa,CAAC/B,IAAI,KAAK,gBAAgB,EAAE;QAC1D,MAAMoC,YAAY,GAAGnC,KAAK,CAACoC,IAAI;;QAE/B;QACA,MAAMC,gBAAgB,GAAGvF,EAAE,CAACwF,MAAM,CAACC,WAAW,CAAC,cAAc,EAAE;UAC3DC,OAAO,EAAE,wBAAwB;UACjCC,KAAK,EAAE,CAAC;UACRhC,KAAK,EAAE;YACHiC,SAAS,EAAE;UACf;QACJ,CAAC,CAAC;QACFT,aAAa,CAACH,aAAa,CAACa,QAAQ,EAAE,CAACN,gBAAgB,EAAEP,aAAa,CAAC,CAAC;QAExED,eAAe,CAAC,IAAI,CAAC;QAErB1E,aAAa,CAACgF,YAAY,EAAEnD,gBAAgB,EAAGG,MAAM,IAAK;UACtD0C,eAAe,CAAC,KAAK,CAAC;UAEtB,IAAI1C,MAAM,CAAClC,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEkC,MAAM,CAAClC,KAAK,CAAC;YACvDH,EAAE,CAACU,IAAI,CAACoF,QAAQ,CAAC,cAAc,CAAC,CAACC,iBAAiB,CAC9C,4BAA4B,GAAG1D,MAAM,CAAClC,KAAK,EAC3C;cAAE6F,IAAI,EAAE;YAAW,CACvB,CAAC;YACD;YACAb,aAAa,CAACI,gBAAgB,CAACM,QAAQ,EAAE,EAAE,CAAC;UAChD,CAAC,MAAM;YACH,MAAMI,UAAU,GAAGjG,EAAE,CAACwF,MAAM,CAACC,WAAW,CAAC,YAAY,EAAE;cACnD9E,GAAG,EAAE0B,MAAM,CAAC1B,GAAG;cACfC,GAAG,EAAEyB,MAAM,CAACzB,GAAG;cACfI,OAAO,EAAE,EAAE;cACXH,EAAE,EAAEwB,MAAM,CAACxB,EAAE,IAAK,gBAAeC,IAAI,CAACC,GAAG,CAAC,CAAE,EAAC,CAAE;YACnD,CAAC,CAAC;YACF;YACAoE,aAAa,CAACI,gBAAgB,CAACM,QAAQ,EAAE,CAACI,UAAU,CAAC,CAAC;UAC1D;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,EAAE,CAACjB,aAAa,EAAE9B,KAAK,CAACoC,IAAI,EAAEH,aAAa,EAAEjD,gBAAgB,CAAC,CAAC;IAEhE,OACIkB,oDAAA,CAAC7D,kEAAa,QACV6D,oDAAA,CAACoB,cAAc;MACXC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEU;IAAoB,CACxC,CACU,CAAC;EAExB;AACJ,CAAC,CAAC;;AAEF;AACAxG,2DAAS,CAAC,oBAAoB,EAAE,4BAA4B,EAAGsH,mBAAmB,IAAK;EACnF;EACA,OAAQC,KAAK,IAAK;IACd,OACI/C,oDAAA,CAAC8C,mBAAmB;MAAA,GACZC,KAAK;MACTC,MAAM,EAAGC,aAAa,IAClBjD,oDAAA,CAAAC,2CAAA,QAEK8C,KAAK,CAACC,MAAM,CAACC,aAAa,CAAC,EAE5BjD,oDAAA,CAAC9B,KAAK;QAACC,QAAQ,EAAE4E,KAAK,CAAC5E;MAAS,CAAE,CACpC;IACJ,CACL,CAAC;EAEV,CAAC;AACL,CAAC,CAAC;;AAEF;AACA3C,2DAAS,CAAC,kBAAkB,EAAE,uCAAuC,EAAG0H,SAAS,IAAK;EAClF,OAAQH,KAAK,IAAK;IACd,IAAIA,KAAK,CAAClD,IAAI,KAAK,YAAY,EAAE;MAC7B,OAAOG,oDAAA,CAACkD,SAAS;QAAA,GAAKH;MAAK,CAAG,CAAC;IACnC;IAEA,OACI/C,oDAAA,CAAAC,2CAAA,QACID,oDAAA,CAACkD,SAAS;MAAA,GAAKH;IAAK,CAAG,CAAC,EACxB/C,oDAAA,CAACzD,sEAAiB,QACdyD,oDAAA,CAACa,iBAAiB;MACdC,UAAU,EAAEiC,KAAK,CAACjC,UAAW;MAC7BC,aAAa,EAAEgC,KAAK,CAAChC;IAAc,CACtC,CACc,CACrB,CAAC;EAEX,CAAC;AACL,CAAC,CAAC;;;;;;;;;;ACjXF;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://wp-ai-image-gen/./src/core-image-modifications.js","webpack://wp-ai-image-gen/external window \"React\"","webpack://wp-ai-image-gen/external window [\"wp\",\"blockEditor\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"components\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"data\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"element\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"hooks\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"richText\"]","webpack://wp-ai-image-gen/webpack/bootstrap","webpack://wp-ai-image-gen/webpack/runtime/compat get default export","webpack://wp-ai-image-gen/webpack/runtime/define property getters","webpack://wp-ai-image-gen/webpack/runtime/hasOwnProperty shorthand","webpack://wp-ai-image-gen/webpack/runtime/make namespace object"],"sourcesContent":["// Import necessary WordPress components and hooks\nimport { addFilter } from '@wordpress/hooks';\nimport { useState, useEffect } from '@wordpress/element';\nimport { Button, TextControl, Modal, Spinner, SelectControl, ToolbarButton } from '@wordpress/components';\nimport { registerFormatType, toggleFormat } from '@wordpress/rich-text';\nimport { BlockControls } from '@wordpress/block-editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody } from '@wordpress/components';\nimport { ToolbarGroup } from '@wordpress/components';\n\n/**\n * Fetches available providers from the server.\n * @returns {Promise<Object>} A promise that resolves to an object of provider IDs and names.\n */\nconst fetchProviders = async () => {\n    try {\n        const response = await wp.apiFetch({ path: '/wp-ai-image-gen/v1/providers' });\n        return response;\n    } catch (error) {\n        console.error('Error fetching providers:', error);\n        // Return an object with an error message that can be displayed to the user\n        return { error: 'Unable to fetch providers. Please try again later.' };\n    }\n};\n\n/**\n * Generates an AI image based on the given prompt and provider.\n * @param {string} prompt - The text prompt for image generation.\n * @param {string} provider - The selected provider ID.\n * @param {function} callback - Function to handle the generated image data.\n */\nconst generateImage = async (prompt, provider, callback) => {\n    try {        \n        // Call the WordPress API to generate the image\n        const response = await wp.apiFetch({\n            path: '/wp-ai-image-gen/v1/generate-image',\n            method: 'POST',\n            data: { prompt, provider },\n        });\n\n        // If the response contains a valid URL, call the callback with image data\n        if (response && response.url) {\n            callback({\n                url: response.url,\n                alt: prompt,\n                id: response.id || `ai-generated-${Date.now()}`, // Fallback ID if not provided\n                caption: '',\n            });\n        } else {\n            // If the response doesn't contain a URL, throw an error\n            throw new Error('Invalid response from server: ' + JSON.stringify(response));\n        }\n    } catch (error) {\n        // Log the detailed error and call the callback with an error object\n        console.error('Detailed error in generateImage:', error);\n        if (error.message) console.error('Error message:', error.message);\n        if (error.stack) console.error('Error stack:', error.stack);\n        callback({ error: error.message || 'Unknown error occurred' });\n    }\n};\n\n/**\n * AITab component for generating AI images\n * @param {Object} props - Component props\n * @param {function} props.onSelect - Function to handle selected image\n */\nconst AITab = ({ onSelect }) => {\n    // State hooks for modal, prompt, loading status, providers, and selected provider\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [prompt, setPrompt] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [providers, setProviders] = useState({});\n    const [selectedProvider, setSelectedProvider] = useState('');\n    const [error, setError] = useState(null);\n\n    // Add a new state hook for the last used provider\n    const [lastUsedProvider, setLastUsedProvider] = useState('');\n\n    // Fetch providers and last used provider when component mounts\n    useEffect(() => {\n        fetchProviders().then((result) => {\n            if (result.error) {\n                setError(result.error);\n            } else {\n                setProviders(result);\n            \n                // Retrieve the last used provider from local storage\n                const storedProvider = localStorage.getItem('wpAiImageGenLastProvider');\n                if (storedProvider && result[storedProvider]) {\n                    setSelectedProvider(storedProvider);\n                    setLastUsedProvider(storedProvider);\n                } else {\n                    // If no stored provider or it's invalid, use the first available provider\n                    setSelectedProvider(Object.keys(result)[0]);\n                }\n            }\n        });\n    }, []);\n\n    // Update local storage when the selected provider changes\n    useEffect(() => {\n        if (selectedProvider) {\n            localStorage.setItem('wpAiImageGenLastProvider', selectedProvider);\n            setLastUsedProvider(selectedProvider);\n        }\n    }, [selectedProvider]);\n\n    // Handler for image generation\n    const handleGenerate = () => {\n        setIsLoading(true);\n        generateImage(prompt, selectedProvider, (media) => {\n            onSelect(media);\n            setIsLoading(false);\n            setIsModalOpen(false);\n        });\n    };\n\n    // Prepare provider options for dropdown\n    const providerOptions = Object.entries(providers).map(([id, name]) => ({ value: id, label: name }));\n\n    return (\n        <>\n            {/* Button to open the AI image generation modal */}\n            <div className=\"block-editor-media-placeholder__url-input-container\">\n                <Button\n                    variant=\"tertiary\"\n                    onClick={() => setIsModalOpen(true)}\n                    className=\"block-editor-media-placeholder__button\"\n                >\n                    Generate AI Image\n                </Button>\n            </div>\n\n            {/* Modal for AI image generation */}\n            {isModalOpen && (\n                <Modal\n                    title=\"WP AI Image Gen\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                >\n                    {error ? (\n                        <p style={{ color: 'red' }}>{error}</p>\n                    ) : (\n                        <>\n                            {/* Provider dropdown (only if there's more than one provider) */}\n                            {providerOptions.length > 1 && (\n                                <SelectControl\n                                    label=\"Select Provider\"\n                                    value={selectedProvider}\n                                    options={providerOptions}\n                                    onChange={setSelectedProvider}\n                                />\n                            )}\n                            {/* Input field for the image prompt */}\n                            <TextControl\n                                label=\"Enter your image prompt\"\n                                value={prompt}\n                                onChange={setPrompt}\n                            />\n                            {/* Button to trigger image generation */}\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleGenerate}\n                                disabled={isLoading || !selectedProvider || Object.keys(providers).length === 0}\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Spinner />\n                                        Generating...\n                                    </>\n                                ) : (\n                                    'Generate Image'\n                                )}\n                            </Button>\n                        </>\n                    )}\n                </Modal>\n            )}\n        </>\n    );\n};\n\n// Add this new component after the AITab component\n/**\n * RegenerateAIImage component for regenerating AI images in the core image block.\n * @param {Object} props - Component props\n * @param {Object} props.attributes - Block attributes\n * @param {function} props.setAttributes - Function to update block attributes\n */\nconst RegenerateAIImage = ({ attributes, setAttributes }) => {\n    const [isRegenerating, setIsRegenerating] = useState(false);\n    const [error, setError] = useState(null);\n    const [lastUsedProvider, setLastUsedProvider] = useState('');\n\n    // Fetch the last used provider when the component mounts\n    useEffect(() => {\n        const storedProvider = localStorage.getItem('wpAiImageGenLastProvider');\n        if (storedProvider) {\n            setLastUsedProvider(storedProvider);\n        }\n    }, []);\n\n    // Handler for regenerating the AI image\n    const handleRegenerate = () => {\n        setIsRegenerating(true);\n        setError(null);\n        \n        generateImage(attributes.alt, lastUsedProvider, (result) => {\n            setIsRegenerating(false);\n            if (result.error) {\n                setError(result.error);\n                console.error('Image regeneration failed:', result.error);\n            } else {\n                setAttributes({\n                    url: result.url,\n                    id: result.id,\n                });\n            }\n        });\n    };\n\n    return (\n        <PanelBody title=\"WP AI Image Gen\">\n            <Button\n                variant=\"secondary\"\n                onClick={handleRegenerate}\n                disabled={isRegenerating || !lastUsedProvider}\n                isBusy={isRegenerating}\n            >\n                {isRegenerating ? 'Regenerating...' : 'Regenerate AI Image'}\n            </Button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n        </PanelBody>\n    );\n};\n\n// Add this new component after the RegenerateAIImage component\n/**\n * AIImageToolbar component for adding a new section to the paragraph toolbar.\n * @param {Object} props - Component props\n */\nconst AIImageToolbar = ({ isGenerating, onGenerateImage }) => {\n    return (\n        <ToolbarGroup>\n            <ToolbarButton\n                icon={isGenerating ? <Spinner /> : \"art\"}\n                label={isGenerating ? \"Generating AI Image...\" : \"Generate AI Image\"}\n                onClick={onGenerateImage}\n                disabled={isGenerating}\n            />\n        </ToolbarGroup>\n    );\n};\n\n// Modify the existing registerFormatType function\nregisterFormatType('wp-ai-image-gen/custom-format', {\n    title: 'AI Image Gen',\n    tagName: 'span',\n    className: 'wp-ai-image-gen-format',\n    edit: ({ isActive, value, onChange }) => {\n        const [lastUsedProvider, setLastUsedProvider] = useState('');\n        const [isGenerating, setIsGenerating] = useState(false);\n\n        const selectedBlock = useSelect(select => \n            select('core/block-editor').getSelectedBlock()\n        , []);\n\n        const { replaceBlocks } = useDispatch('core/block-editor');\n\n        // Fetch the last used provider from localStorage when the component mounts\n        useEffect(() => {\n            const storedProvider = localStorage.getItem('wpAiImageGenLastProvider');\n            if (storedProvider) {\n                setLastUsedProvider(storedProvider);\n            }\n        }, []);\n\n        const handleGenerateImage = useCallback(() => {\n            if (selectedBlock && selectedBlock.name === 'core/paragraph') {\n                const selectedText = value.text;\n                \n                // Create and insert a placeholder heading block with a message\n                const placeholderBlock = wp.blocks.createBlock('core/heading', {\n                    content: 'Generating AI image...',\n                    level: 2,\n                    style: {\n                        textAlign: 'center',\n                    },\n                });\n                replaceBlocks(selectedBlock.clientId, [placeholderBlock, selectedBlock]);\n                \n                setIsGenerating(true);\n                \n                generateImage(selectedText, lastUsedProvider, (result) => {\n                    setIsGenerating(false);\n                    \n                    if (result.error) {\n                        console.error('Image generation failed:', result.error);\n                        wp.data.dispatch('core/notices').createErrorNotice(\n                            'Failed to generate image: ' + result.error,\n                            { type: 'snackbar' }\n                        );\n                        // Remove the placeholder block if there's an error\n                        replaceBlocks(placeholderBlock.clientId, []);\n                    } else {\n                        const imageBlock = wp.blocks.createBlock('core/image', {\n                            url: result.url,\n                            alt: result.alt,\n                            caption: '',\n                            id: result.id || `ai-generated-${Date.now()}`, // Ensure ID is set\n                        });\n                        // Replace the placeholder block with the new image block\n                        replaceBlocks(placeholderBlock.clientId, [imageBlock]);\n                    }\n                });\n            }\n        }, [selectedBlock, value.text, replaceBlocks, lastUsedProvider]);\n\n        return (\n            <BlockControls>\n                <AIImageToolbar\n                    isGenerating={isGenerating}\n                    onGenerateImage={handleGenerateImage}\n                />\n            </BlockControls>\n        );\n    },\n});\n\n// Add the AI tab to the media modal using WordPress filter\naddFilter('editor.MediaUpload', 'wp-ai-image-gen/add-ai-tab', (OriginalMediaUpload) => {\n    // Return a new component that wraps the original MediaUpload\n    return (props) => {\n        return (\n            <OriginalMediaUpload\n                {...props}\n                render={(originalProps) => (\n                    <>\n                        {/* Render the original MediaUpload component */}\n                        {props.render(originalProps)}\n                        {/* Add the AITab component */}\n                        <AITab onSelect={props.onSelect} />\n                    </>\n                )}\n            />\n        );\n    };\n});\n\n// Modify the existing addFilter function at the end of the file\naddFilter('editor.BlockEdit', 'wp-ai-image-gen/add-regenerate-button', (BlockEdit) => {\n    return (props) => {\n        if (props.name !== 'core/image') {\n            return <BlockEdit {...props} />;\n        }\n\n        return (\n            <>\n                <BlockEdit {...props} />\n                <InspectorControls>\n                    <RegenerateAIImage\n                        attributes={props.attributes}\n                        setAttributes={props.setAttributes}\n                    />\n                </InspectorControls>\n            </>\n        );\n    };\n});\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"richText\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["addFilter","useState","useEffect","Button","TextControl","Modal","Spinner","SelectControl","ToolbarButton","registerFormatType","toggleFormat","BlockControls","useSelect","useDispatch","useCallback","InspectorControls","PanelBody","ToolbarGroup","fetchProviders","response","wp","apiFetch","path","error","console","generateImage","prompt","provider","callback","method","data","url","alt","id","Date","now","caption","Error","JSON","stringify","message","stack","AITab","onSelect","isModalOpen","setIsModalOpen","setPrompt","isLoading","setIsLoading","providers","setProviders","selectedProvider","setSelectedProvider","setError","lastUsedProvider","setLastUsedProvider","then","result","storedProvider","localStorage","getItem","Object","keys","setItem","handleGenerate","media","providerOptions","entries","map","name","value","label","createElement","Fragment","className","variant","onClick","title","onRequestClose","style","color","length","options","onChange","disabled","RegenerateAIImage","attributes","setAttributes","isRegenerating","setIsRegenerating","handleRegenerate","isBusy","AIImageToolbar","isGenerating","onGenerateImage","icon","tagName","edit","isActive","setIsGenerating","selectedBlock","select","getSelectedBlock","replaceBlocks","handleGenerateImage","selectedText","text","placeholderBlock","blocks","createBlock","content","level","textAlign","clientId","dispatch","createErrorNotice","type","imageBlock","OriginalMediaUpload","props","render","originalProps","BlockEdit"],"sourceRoot":""}