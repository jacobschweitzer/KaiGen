{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wp-ai-image-gen/./src/core-image-modifications.js","webpack://wp-ai-image-gen/external window \"React\"","webpack://wp-ai-image-gen/external window [\"wp\",\"components\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"element\"]","webpack://wp-ai-image-gen/external window [\"wp\",\"hooks\"]","webpack://wp-ai-image-gen/webpack/bootstrap","webpack://wp-ai-image-gen/webpack/runtime/compat get default export","webpack://wp-ai-image-gen/webpack/runtime/define property getters","webpack://wp-ai-image-gen/webpack/runtime/hasOwnProperty shorthand","webpack://wp-ai-image-gen/webpack/runtime/make namespace object"],"sourcesContent":["// Import necessary WordPress components and hooks\nimport { addFilter } from '@wordpress/hooks';\nimport { useState, useEffect } from '@wordpress/element';\nimport { Button, TextControl, Modal, Spinner, SelectControl } from '@wordpress/components';\n\n/**\n * Fetches available providers from the server.\n * @returns {Promise<Object>} A promise that resolves to an object of provider IDs and names.\n */\nconst fetchProviders = async () => {\n    try {\n        const response = await wp.apiFetch({ path: '/wp-ai-image-gen/v1/providers' });\n        return response;\n    } catch (error) {\n        console.error('Error fetching providers:', error);\n        // Return an object with an error message that can be displayed to the user\n        return { error: 'Unable to fetch providers. Please try again later.' };\n    }\n};\n\n/**\n * Generates an AI image based on the given prompt and provider\n * @param {string} prompt - The text prompt for image generation\n * @param {string} provider - The selected provider ID\n * @param {function} callback - Function to handle the generated image data\n */\nconst generateImage = (prompt, provider, callback) => {\n    // Call the WordPress API to generate the image\n    wp.apiFetch({\n        path: '/wp-ai-image-gen/v1/generate-image',\n        method: 'POST',\n        data: { prompt, provider },\n    })\n        .then((response) => {\n            // If the response contains a valid URL, call the callback with image data\n            if (response && response.url) {\n                callback({\n                    url: response.url,\n                    alt: prompt,\n                    id: response.id,\n                });\n            }\n        })\n        .catch((error) => {\n            // Log any errors and call the callback with null\n            console.error('Error fetching image:', error);\n            callback(null);\n        });\n};\n\n/**\n * AITab component for generating AI images\n * @param {Object} props - Component props\n * @param {function} props.onSelect - Function to handle selected image\n */\nconst AITab = ({ onSelect }) => {\n    // State hooks for modal, prompt, loading status, providers, and selected provider\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [prompt, setPrompt] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [providers, setProviders] = useState({});\n    const [selectedProvider, setSelectedProvider] = useState('');\n    const [error, setError] = useState(null);\n\n    // Add a new state hook for the last used provider\n    const [lastUsedProvider, setLastUsedProvider] = useState('');\n\n    // Fetch providers and last used provider when component mounts\n    useEffect(() => {\n        fetchProviders().then((result) => {\n            if (result.error) {\n                setError(result.error);\n            } else {\n                setProviders(result);\n                // Retrieve the last used provider from local storage\n                const storedProvider = localStorage.getItem('wpAiImageGenLastProvider');\n                if (storedProvider && result[storedProvider]) {\n                    setSelectedProvider(storedProvider);\n                    setLastUsedProvider(storedProvider);\n                } else {\n                    // If no stored provider or it's invalid, use the first available provider\n                    setSelectedProvider(Object.keys(result)[0]);\n                }\n            }\n        });\n    }, []);\n\n    // Update local storage when the selected provider changes\n    useEffect(() => {\n        if (selectedProvider) {\n            localStorage.setItem('wpAiImageGenLastProvider', selectedProvider);\n            setLastUsedProvider(selectedProvider);\n        }\n    }, [selectedProvider]);\n\n    // Handler for image generation\n    const handleGenerate = () => {\n        setIsLoading(true);\n        generateImage(prompt, selectedProvider, (media) => {\n            onSelect(media);\n            setIsLoading(false);\n            setIsModalOpen(false);\n        });\n    };\n\n    // Prepare provider options for dropdown\n    const providerOptions = Object.entries(providers).map(([id, name]) => ({ value: id, label: name }));\n\n    return (\n        <>\n            {/* Button to open the AI image generation modal */}\n            <div className=\"block-editor-media-placeholder__url-input-container\">\n                <Button\n                    variant=\"tertiary\"\n                    onClick={() => setIsModalOpen(true)}\n                    className=\"block-editor-media-placeholder__button\"\n                >\n                    Generate AI Image\n                </Button>\n            </div>\n\n            {/* Modal for AI image generation */}\n            {isModalOpen && (\n                <Modal\n                    title=\"WP AI Image Gen\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                >\n                    {error ? (\n                        <p style={{ color: 'red' }}>{error}</p>\n                    ) : (\n                        <>\n                            {/* Provider dropdown (only if there's more than one provider) */}\n                            {providerOptions.length > 1 && (\n                                <SelectControl\n                                    label=\"Select Provider\"\n                                    value={selectedProvider}\n                                    options={providerOptions}\n                                    onChange={setSelectedProvider}\n                                />\n                            )}\n                            {/* Input field for the image prompt */}\n                            <TextControl\n                                label=\"Enter your image prompt\"\n                                value={prompt}\n                                onChange={setPrompt}\n                            />\n                            {/* Button to trigger image generation */}\n                            <Button\n                                variant=\"primary\"\n                                onClick={handleGenerate}\n                                disabled={isLoading || !selectedProvider || Object.keys(providers).length === 0}\n                            >\n                                {isLoading ? (\n                                    <>\n                                        <Spinner />\n                                        Generating...\n                                    </>\n                                ) : (\n                                    'Generate Image'\n                                )}\n                            </Button>\n                        </>\n                    )}\n                </Modal>\n            )}\n        </>\n    );\n};\n\n// Add the AI tab to the media modal using WordPress filter\naddFilter('editor.MediaUpload', 'wp-ai-image-gen/add-ai-tab', (OriginalMediaUpload) => {\n    // Return a new component that wraps the original MediaUpload\n    return (props) => {\n        return (\n            <OriginalMediaUpload\n                {...props}\n                render={(originalProps) => (\n                    <>\n                        {/* Render the original MediaUpload component */}\n                        {props.render(originalProps)}\n                        {/* Add the AITab component */}\n                        <AITab onSelect={props.onSelect} />\n                    </>\n                )}\n            />\n        );\n    };\n});\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["addFilter","useState","useEffect","Button","TextControl","Modal","Spinner","SelectControl","fetchProviders","response","wp","apiFetch","path","error","console","generateImage","prompt","provider","callback","method","data","then","url","alt","id","catch","AITab","onSelect","isModalOpen","setIsModalOpen","setPrompt","isLoading","setIsLoading","providers","setProviders","selectedProvider","setSelectedProvider","setError","lastUsedProvider","setLastUsedProvider","result","storedProvider","localStorage","getItem","Object","keys","setItem","handleGenerate","media","providerOptions","entries","map","name","value","label","createElement","Fragment","className","variant","onClick","title","onRequestClose","style","color","length","options","onChange","disabled","OriginalMediaUpload","props","render","originalProps"],"sourceRoot":""}